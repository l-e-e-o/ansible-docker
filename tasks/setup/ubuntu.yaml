- name: Ubuntu | Ensure dependencies are installed
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - ca-certificates
    - curl
    - gnupg
    - lsb-release

- name: Ubuntu | Download docker repository gpg key
  become: true
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/trusted.gpg.d/docker.asc
    mode: '0644'
    checksum: sha256:1500c1f56fa9e26b9b8f42452a553675796ade0807cdce11975eb98170b3a570 # curl -sL https://download.docker.com/linux/ubuntu/gpg|sha256sum

- name: Ubuntu | Ensure docker repository file exists
  become: true
  ansible.builtin.apt_repository:
    filename: docker
    repo: "deb [arch={{ docker_supported_os[ansible_distribution].arch[ansible_architecture] }} signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
  notify:
    - Update apt cache

- name: Ubuntu | Ensure no legacy docker is installed
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: absent
  loop: "{{ docker_legacy_packages }}"

- name: Ubuntu | Update package manager cache if necessary
  meta: flush_handlers

- name: Ubuntu | Ensure docker is installed
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ docker_packages }}"
